<?php
/**
 * @file
 * Code for the Brèves feature.
 */

include_once 'crealead_newsflashes.features.inc';

/**
 * Implements hook_menu().
 */
/**
 * Implements hook_permission().
 */
function crealead_newsflashes_permission() {
  return array(
    'administer newsflashes' => array(
      'title' => t('Administer newsflashes'),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
/**
 * Implements hook_menu().
 */
function crealead_newsflashes_menu() {
  // No longer used. Instead go to /admin/config/crealead/newsflashes/manual.
//  $items['send-newsflashes-email'] = array(
//    'type' => MENU_CALLBACK,
//    'page callback' => 'crealead_newsflashes_send_mail',
//    'access arguments' => array('administer newsflashes'),
//    'access callback' => TRUE,
//  );

  $items['admin/config/crealead/newsflashes'] = array(
    'title' => 'Brèves',
    'description' => 'Paramétrage des envois de brèves par email.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crealead_newsflashes_settings_form'),
    'access arguments' => array('administer newsflashes'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'crealead_newsflashes.admin.inc',
  );
  $items['admin/config/crealead/newsflashes/auto'] = array(
    'title' => 'Paramétrage des envois automatiques',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/config/crealead/newsflashes/manual'] = array(
    'title' => 'Envoi manuel',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crealead_newsflashes_manual_sending_form'),
    'access arguments' => array('administer newsflashes'),
    'file' => 'crealead_newsflashes.admin.inc',
  );
  $items['admin/config/crealead/newsflashes/test'] = array(
    'title' => 'Test',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crealead_newsflashes_test_sending_form'),
    'access arguments' => array('administer newsflashes'),
    'file' => 'crealead_newsflashes.admin.inc',
  );

  return $items;
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function crealead_newsflashes_form_newsflash_node_form_alter(&$form, &$form_state, $form_id) {
  // Move "Champs Crealed" vertical tab to the bottom.
  $form['#groups']['group_crealead_fields']->weight = 200;

  // Stuff that has to be done after form build.
  //$form['#after_build'][] = 'crealead_newsflashes_after_build';
}

//function crealead_newsflashes_after_build($form, &$form_state) {
//  // Make the field field_sent readonly if user is not superadmin.
//  global $user;
//
//  if ($user->uid != 1) {
//    $form['field_sent']['#attributes']['readonly'] = 'readonly';
//  }
//
//  return $form;
//}

//// No longer used
//function crealead_newsflashes_send_mail() {
//  crealead_send_latest_newsflashes();
//}

function crealead_send_latest_newsflashes($real_sending=FALSE, $test_addresses=NULL, $selected_newsflashes=array(), $form_state_values=null) {
  if (!empty($selected_newsflashes)) {
    $newsflashes_details = crealead_newsflashes_get_latest(TRUE, $selected_newsflashes, $form_state_values['full-body-yes-no']);
  }
  else {
    $newsflashes_details = crealead_newsflashes_get_latest(TRUE);
  }

  $current_date = format_date(time(), 'custom', 'l j F Y');
  if($real_sending) {
    $email_addresses = crealead_get_users_emails();

    // DO NOT DELETE THE FOLLOWING LINE (kept for tests purposes only).
    // $email_addresses = array('christophe.espiau@laposte.net');

    if (isset($form_state_values)) {
      $mail_subject = '[Crealead] ' . $form_state_values['subject'];
    }
    else {
      $mail_subject = '[Crealead] Informations du ' . $current_date;
    }
  }
  else {
    $email_addresses = $test_addresses;
    $mail_subject = '[Crealead - TEST] Informations du ' . $current_date;
  }

  // Email message building
//  $to = implode(';', $email_addresses);
//  $from = variable_get('site_mail');
  $from = "Crealead <contact@crealead.com>";
  $reply_to = "contact@crealead.com";
  $to = 'undisclosed-recipients:;';
  $bcc = implode(',', $email_addresses);

  $host = $_SERVER['HTTP_HOST'];
  $newsflashes_url = 'http://' . $host . '/espace-co-entrepreneur/informations';

  $mail_body = '<p>Bonjour à tous,</p>'
    . '<p>Voici la liste des dernières brèves publiées sur le site web de Crealead.</p>'
    . '<p>Si ce message ne s\'affiche pas correctement, allez voir les brèves sur le <a href="'. $newsflashes_url . '">site web</a>.</p>';


  $mail_body .= '<table id="crealead-newsflashes-list">';
  $mail_body .= '<tr><th>Population concernée</th><th></th></tr>';
  $mail_body .= '<tr><td colspan="2"></td></tr>';
  foreach ($newsflashes_details as $item) {
    $mail_body .= '<tr class="nf_item">';

    $mail_body .= '<td class="nf-population">' . $item['population'] . '</td>';
    $mail_body .=
      '<td class="nf-title" style="padding-left:20px;">' .
        '<a href="http://' . $host . '/node/' . $item['nid'] . '">' . $item['title'] . '</a>' .
      '</td>';

    $mail_body .= '<tr><td colspan="2"></td></tr>';
    $mail_body .= '</tr>';

    if ($form_state_values['full-body-yes-no']) {
      $mail_body .= '<tr class="nf_item_body">';
      $mail_body .= '<td></td>';
      $mail_body .= '<td class="nf-body">' . $item['body'] . '</td>';
      $mail_body .= '</tr>';
    }
  }

  $mail_body .= '</table>';

  $footer_image_fullpath = drupal_get_path('module','kcore') . '/images/bandeau-crealead.jpg';

  $mail_body .=
    '<br/><br/>' .
    '<p class="crealead-email-footer">' .
    '<img src="' . $footer_image_fullpath . '">' .
    '</p>';

  $params = array(
    'headers' => array(
      'Bcc' => $bcc,
      'Reply-To' => $reply_to,
    ),
    'subject' => $mail_subject,
    'body' => $mail_body,
  );

  $type = 'success';

  $what = 'Les brèves';
  $adjective = 'sélectionnées';
  $verb = 'ont été envoyées';
  $recipient = 'aux co-entrepreneurs';

  if (sizeof($newsflashes_details) == 1) {
    $what = 'La brève';
    $adjective = 'sélectionnée';
    $verb = 'a été envoyée';
  }

  if (drupal_mail('crealead_newsflashes', 'latest_newsflashes_list', $to, language_default(), $params, $from)) {
    if ($real_sending) {
      foreach ($newsflashes_details as $item) {
        $nf_wrapper = entity_metadata_wrapper('node', $item['nid']);
        $nf_wrapper->field_sent_by_email = 'oui';
        $nf_wrapper->save();
      }
    }
    else {
      $adjective = '';
      $recipient = 'à l\'adresse email de test';
      if (sizeof($test_addresses) > 1) {
        $recipient = 'aux adresses email de test';
      }
    }
    $message = t('%what %adjective %verb %recipient.', array(
      '%what' => $what,
      '%adjective' => $adjective,
      '%verb' => $verb,
      '%recipient' => $recipient,
    ));
  }
  else {
    $message = t('L\'envoi a échoué. Veuillez contacter l\'administrateur.');
    $type = 'warning';
  }
  drupal_set_message('<div class="message ' . $type . '">' . $message . '</div>');
}

/**
 * Implements hook_mail().
 */
function crealead_newsflashes_mail($key, &$message, $params) {
  switch ($key) {
    case 'latest_newsflashes_list':
      $message['headers'] += $params['headers'];
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      break;
  }
}

function crealead_get_users_emails() {
  $query = db_select('users', 'u');
  $query->fields('u', array('uid','mail'));
  $query->condition('u.status', 1);
  return $query->execute()->fetchAllKeyed(0, 1);
}

function crealead_newsflashes_get_latest($with_details=FALSE, $selected_newsflashes=array(), $full_body=0) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'newsflash')
//    ->entityCondition('entity_id', array_values($selected_newsflashes), 'IN')
    ->propertyCondition('status', NODE_PUBLISHED)
//    ->fieldCondition('field_sent_by_email', 'value', 'non')
    ->fieldCondition('field_display_end_date','value', date('Y-m-d') . 'T00:00:00', '>=')
    ->propertyOrderBy('created', 'DESC');

  $result = $query->execute();

  if (!isset($result['node'])) {
    return array();
  }
  else {
    if (!$with_details) {
      return sizeof($result['node']);
    }
    else {
      $newsflashes_nids = array_keys($result['node']);
      $newsflashes_details = array();

      foreach ($newsflashes_nids as $nid) {
        if (!empty($selected_newsflashes)) {
          if (!in_array($nid, $selected_newsflashes)) {
            continue;
          }
        }

        $wrapper = entity_metadata_wrapper('node', $nid);
        $populations_array = $wrapper->field_related_population->value();
        $population_names = array();
        $populations_value = '';


        if (!empty($populations_array)) {
          foreach($populations_array as $pop) {
            $population_names[] = $pop->name;
          }
          $populations_value = implode(', ', $population_names);
        }

        $newsflashes_details[$nid] = array(
          'nid' => $nid,
          'title' => $wrapper->title->value(),
          'population' => $populations_value,
          'author' => $wrapper->author->name->value(),
          'sent_by_email' => $wrapper->field_sent_by_email->value(),
        );

        if ($full_body) {
          $newsflash_body = $wrapper->body->value()['safe_value'];
          $newsflashes_details[$nid]['body'] = $newsflash_body;
        }
      }

      return $newsflashes_details;
    }
  }
}

/**
 * Implements hook_node_access().
 */
function crealead_newsflashes_node_access($node, $op, $account) {
  if (isset($node->type) && $node->type == 'newsflash' && !user_is_logged_in()) {
    return NODE_ACCESS_DENY;
  }
}

/**
 * Implements hook_cron().
 */
function crealead_newsflashes_cron() {
  // Determine the value of the current day (1=monday... 7=sunday).
  $today = date('N');
  // Fetch the sending days values that have been checked in the automatic sending admin page (/admin/config/crealead/newsflashes).
  $sending_days = variable_get('newsflashes_sending_days', array());

  if (in_array($today, $sending_days)) {
    crealead_send_latest_newsflashes(TRUE);
  }
}
