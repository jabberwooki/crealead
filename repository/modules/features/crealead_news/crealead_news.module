<?php
/**
 * @file
 * Code for the Actualités feature.
 */

include_once 'crealead_news.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function crealead_news_form_news_node_form_alter(&$form, &$form_state, $form_id) {
  $form['field_sorting_date']['#disabled'] = TRUE;
  $form['#groups']['group_crealead_settings']->weight = 1000;

  // If user is not allowed, field_news_kind and field_related_themes removed.
  global $user;
  $current_user_roles = $user->roles;
  $crealead_news_allowed_roles = array('administrateur','webmaster','référent');
  $current_user_allowed_roles = array_intersect($crealead_news_allowed_roles, $current_user_roles);
  if (empty($current_user_allowed_roles) & $user->uid != 1) {
    $form['field_news_kind']['#access'] = FALSE;
    //$form['field_landing_pages']['#access'] = FALSE;
  }

  // Related brands list handling ----------------------------------------------
  // The news create/edit form always contains a user id.
  // If news is being created, user id is the current user id.
  // If news is being modified, user id is the news author id.
  // In either cases, we must seek for brands the concerned user belongs to.
  $query = db_select('field_data_field_brand_coe', 'coe');
  $query->fields('coe', array('entity_id', 'field_brand_coe_target_id'));
  $query->join('field_data_field_brand_coes', 'coes', 'coes.field_brand_coes_value=coe.entity_id');
  $query->fields('coes', array('entity_id'));
  $query->condition('field_brand_coe_target_id', $form['uid']['#value']);
  $news_brands = $query->execute()->fetchAllKeyed(2, 2);

  $brand_options = $form['field_related_brands']['und']['#options'];
  foreach ($brand_options as $key => $brand) {
    if (!in_array($key, $news_brands)) {
      unset($brand_options[$key]);
    }
  }
  $form['field_related_brands']['und']['#options'] = $brand_options;

  // Then, if news is being modified and current user is not news author,
  // we must display a disabled brand list, unless current used is allowed to.
  if (isset($form['nid']['#value']) && $user->uid != $form['uid']['#value'] && empty($current_user_allowed_roles) & $user->uid != 1) {
      $form['field_related_brands']['#disabled'] = TRUE;
  }

  // If news is being created from a brand page,
  // we must catch the brand nid from url
  // and check the corresponding brand in field_related_brands field.
  if (!isset($form['nid']['#value']) && NULL != arg(3)) {
    $form['field_related_brands']['und']['#default_value'] = array(arg(3));
  }
  // End of Related brands list handling ---------------------------------------
  $sector_brands_full_list = $form['field_related_sector_brands']['und']['#options'];
  // Hugly hack to remove no longer wanted options of field_news_kind
  // (They cannot be simply deleted because already used).
  unset($form['field_news_kind']['und']['#options'][2]);
  unset($form['field_news_kind']['und']['#options'][3]);

  // Related sector brands list handling ---------------------------------------
  // We must display only sector brands and certifications/labels the parent brand(s) of the current news is related to.
  // First, we get the parent brands.
  $parent_brands = crealead_news_get_parent_brands($form['nid']['#value']);

  // If any parent brands exist, we get the sector brands and certifs/labels of each parent brand.
  if (!empty($parent_brands)) {
    $parent_sector_brands = crealead_brands_get_parent_sector_brands($parent_brands);
    $parent_certifs_labels = crealead_brands_get_parent_certifs_labels($parent_brands);

    // If any parent sector brands exist
    if (!empty($parent_sector_brands)) {
      // We have to clean the sector brand field options array by keeping only the parent sector brands.
      $form['field_related_sector_brands']['und']['#options'] =
        crealead_clean_sector_brands_options($form['field_related_sector_brands']['und']['#options'], $parent_sector_brands);
    }
    // otherwise we remove the related sector brands field from display.
    else {
      $form['field_related_sector_brands']['#access'] = FALSE;
    }

    // If any certif/label exists
    if (!empty($parent_certifs_labels)) {
      // We have to clean the certifications/labels field options array by keeping only the parent ones.
      $form['field_related_certifs_labels']['und']['#options'] =
        crealead_clean_certifs_labels_options($form['field_related_certifs_labels']['und']['#options'], $parent_certifs_labels);
    }
    else {
      $form['field_related_certifs_labels']['#access'] = FALSE;
    }
  }
  // otherwise we remove the related sector brands and certifs/label fields from display.
  else {
    if (!isset($form['#node']->field_news_kind) || empty($form['#node']->field_news_kind) || $form['#node']->field_news_kind['und'][0]['value'] != 1) {
      //
    }
    $form['field_related_sector_brands']['#access'] = FALSE;
    $form['field_related_certifs_labels']['#access'] = FALSE;
  }

  // EXCEPTION : referents, webmasters and pole gestion are allowed to attach CREALEAD tagged news to any sector brand,
  // but only if news is "Crealead news" (which means in edit mode, during creation mode the node cannot be "Crealead news").
  $crealead_sector_brands_allowed_roles = array('administrateur','webmaster','référent','pôle gestion');
  $current_user_sector_brands_allowed_roles = array_intersect($crealead_sector_brands_allowed_roles, $current_user_roles);
  if (isset($form['nid']['#value']) && isset($form_state['node']->field_news_kind['und'][0]['value']) && $form_state['node']->field_news_kind['und'][0]['value'] == 1) {
    $form['field_related_sector_brands']['und']['#options'] = $sector_brands_full_list;
    $form['field_related_sector_brands']['#access'] = TRUE;
  }
  // End of Related sector brands list handling --------------------------------

  // Summary is now in plain text. We must remove html tags for nodes saved prior to this modification.
  $form['body']['und'][0]['summary']['#default_value'] = strip_tags($form['body']['und'][0]['summary']['#default_value']);

  // Gestion du champ field_related_pole (Actualité visible à la Une de :).
//    $pole_handling_allowed_roles = array('administrateur','responsable de pôle');
//    $current_user_allowed_roles = array_intersect($pole_handling_allowed_roles, $current_user_roles);
    if ($user->uid != 1 && !in_array('administrateur', $current_user_roles)) {
        if (!in_array('responsable de pôle', $current_user_roles)) {
            $form['field_related_pole']['#access'] = FALSE;
        }
        else {
            $full_user = user_load($user->uid);
            if (isset($full_user->field_pole_manager['und'][0]['tid'])) {
                foreach ($form['field_related_pole']['und']['#options'] as $pole_tid => $pole_name) {
                    if ($pole_tid != $full_user->field_pole_manager['und'][0]['tid'] && $pole_tid != '_none') {
                        unset($form['field_related_pole']['und']['#options'][$pole_tid]);
                    }
                }
            }
            else {
                $form['field_related_pole']['#access'] = FALSE;
            }
        }
    }
}

/**
 * Implements hook_node_presave().
 */
function crealead_news_node_presave($node) {
  if ($node->type == 'news') {
    if (!empty($node->field_news_date['und'])) {
      $node->field_sorting_date['und'][0]['value'] = $node->field_news_date['und'][0]['value'];
    }
    else {
      $node->field_sorting_date['und'][0]['value'] = $node->created;
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function crealead_news_views_pre_render(&$view) {

  if ($view->name == 'news' && $view->current_display == 'page_news_list') {

    drupal_add_js(drupal_get_path('theme', 'crealead') . '/js/match-actu-height.js', array(
      'type' => 'file',
      'group' => JS_THEME,
    ));
    drupal_add_js(drupal_get_path('module','crealead_news') . '/js/search-news.js');
    
    $nids_to_skip = array();

    // Fetch nid of node displayed in Zoom block and store it in $nids_to_skip array.
    $zoom_actu_result = views_get_view_result('news','nid_zoom_actu');
    if (!empty($zoom_actu_result)) {
      $nids_to_skip[] = $zoom_actu_result[0]->nid;
    }

    // Fetch nids of nodes displayed in Actus 2 3 block and store them in $nids_to_skip array.
    $news_2_3_result = views_get_view_result('news','nids_2_3');
    if (!empty($news_2_3_result)) {
      foreach ($news_2_3_result as $news) {
        $nids_to_skip[] = $news->nid;
      }
    }

    // If a nid contained in news list exists in $nids_to_skip array, we get rid of it.
    foreach ($view->result as $key=>$result) {
      if (in_array($result->nid, $nids_to_skip)) {
        unset($view->result[$key]);
      }
    }
  }
  elseif ($view->name == 'news' && $view->current_display == 'brand_news') {
    // Link 'Ajouter une actualité' must be added to block only for coes attached to the current brand.
    global $user;
    $current_brand = menu_get_object();
    $wrapper = entity_metadata_wrapper('node', $current_brand);
    $brand_coes = $wrapper->field_brand_coes->value();

    foreach ($brand_coes as $brand_coe) {
      if ($user->uid != $brand_coe->field_brand_coe['und'][0]['target_id']) {
        continue;
      }
      else {
        $view->header['area']->options['content'] = l(
          'Ajouter une actualité',
          '/node/add/news/' . $current_brand->nid,
          array('query' => array('destination' => current_path()))
        );
        break;
      }
    }
  }
}

function crealead_news_get_parent_brands($article_id) {
  if (!isset($article_id)) return array();

  $query = db_select('field_data_field_related_brands', 'frb');
  $query->fields('frb', array('field_related_brands_target_id'));
  $query->condition('entity_id', $article_id);

  return $query->execute()->fetchAllKeyed(0,0);
}

/**
 * Implements hook_node_view().
 *
 * News node summary is now plain text.
 * We must removed html tags for node summaries saved prior to this modification.
 */
function crealead_news_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'news'
    && in_array($view_mode, array('block', 'news_2_3','teaser','sector_brand_block','landing_page_block','certifications_labels_block'))) {
    if (isset($node->content['body']['#items'][0]['summary'])) {
      $node->content['body'][0]['#markup'] = strip_tags($node->content['body'][0]['#markup']);
    }
  }
}

/**
 * Implements hook_node_postinsert().
 */
function crealead_news_node_postinsert($node) {
    $is_watchdog_on = FALSE;

    // Si une actu vient d'etre créée et cochée comme visible dans l'onglet A la une d'un pole d'activités,
    // il faut incrémenter de +1 le poids des autres actus à la une de ce pole dans la table draggableviews_structure
    // puis insérer cette actu avec le poids 0 dans cette meme table.
    if ($node->type == 'news' && $node->status == '1' && !empty($node->field_related_pole)) {
        // Incrémentation du poids des actus déjà présentes dans draggableviews_structure
        $number_updated = db_update('draggableviews_structure')
            ->expression('weight', 'weight + :weight', array(':weight' => 1))
            ->condition('view_display', 'page_front_news_sorting')
            ->condition('args', '["' . $node->field_related_pole['und'][0]['tid'] . '"]')
            ->execute();

        // Insertion de l'actu nouvellement créée dans draggableviews_structure.
        $dvid = db_insert('draggableviews_structure')
            ->fields(array(
                'view_name' => 'news',
                'view_display' => 'page_front_news_sorting',
                'args' => '["' . $node->field_related_pole['und'][0]['tid'] . '"]',
                'entity_id' => $node->nid,
                'weight' => 0
            ))
            ->execute();

        if ($is_watchdog_on) {
            watchdog('crealead_news', 'Weight increased by +1 in table draggableviews_structure for ' . $number_updated . ' news nodes.');
            watchdog('crealead_news', 'Node ' . $node->nid . ' inserted into table draggableviews_structure with weight 0.');
        }
    }
}
