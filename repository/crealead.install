<?php
/**
 * @file
 * Install, update and uninstall functions for the crealead installation profile.
 */

/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function crealead_install() {
  // Allow visitors to register.
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  // Give access to the published content to everyone.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));
}

/**
 * Implements hook_install_tasks().
 */
function crealead_install_tasks(&$install_state) {
  $tasks = array();

  $tasks['crealead_install_theme'] = array(
    'display_name' => st('crealead theme installation'),
    'display' => TRUE,
    'type' => 'normal',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_crealead_install_theme',
  );

  $tasks['crealead_install_locale'] = array(
    'display_name' => st('crealead locale installation'),
    'display' => TRUE,
    'type' => 'batch',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_crealead_install_locale',
  );

  $tasks['crealead_install_variables'] = array(
    'display_name' => st('crealead variables installation'),
    'display' => TRUE,
    'type' => 'normal',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_crealead_install_variables',
  );

  $tasks['crealead_install_user1'] = array(
    'display_name' => st('crealead user1 installation'),
    'display' => TRUE,
    'type' => 'normal',
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_crealead_install_user1',
  );

  return $tasks;
}

/**
 * Enable default and admin themes and hide all but system/main blocks to let
 * context manage them.
 */
function _crealead_install_theme() {
  $settings = _crealead_get_settings();
  
  // Set default theme.
  $theme_name = $settings['default_theme'];
  theme_disable(array('bartik','garland', 'seven', 'stark'));
  theme_enable(array($theme_name));
  variable_set('theme_default', $theme_name);

  // Set admin theme.
  $admin_theme_name = $settings['admin_theme'];
  theme_enable(array($admin_theme_name));
  variable_set('admin_theme', $admin_theme_name);
  variable_set('node_admin_theme', TRUE);

  // Disable all blocks by default except system-main. Use context to enable them.
  db_update('block')
    ->fields(array('region' => -1))
    ->condition(
      db_or()
        ->condition('delta', 'main', '!=')
        ->condition('module', 'system', '!=')
    )
    ->execute();
}

/**
 * Enable french language and set it as default then disable other languages and
 * download french translations.
 */
function _crealead_install_locale(&$install_state) {
  $settings = _crealead_get_settings();
  // If the default language is english we have nothing to do here.
  if ($settings['default_language'] == 'en') {
    return;
  }

  // Add french language if needed.
  include_once DRUPAL_ROOT . '/includes/locale.inc';
  $langs = language_list();
  if (empty($langs[$settings['default_language']])) {
    locale_add_language($settings['default_language']);
    $langs = language_list();
  }

  // Enable french language and set it as default.
  db_update('languages')
    ->fields(array(
      'enabled' => '1',
    ))
    ->condition('language', $settings['default_language'])
    ->execute();
  variable_set('language_default', (object) $langs[$settings['default_language']]);

  // Disable all other languages.
  db_update('languages')
    ->fields(array(
      'enabled' => '0',
    ))
    ->condition('language', $settings['default_language'], '<>')
    ->execute();

  // Reset languages static cache to avoid issues with l10n_update.
  drupal_static_reset('language_list');

  // Stop the script here if we don't want or don't need to import translations.
  if ($settings['default_language'] == 'en' || empty($settings['import_translations'])) {
    return;
  }

  // Download french translations by using the l10n_update module batch.  
  module_enable(array('l10n_update'));
  module_load_include('fetch.inc', 'l10n_update');

  $batch = batch_get();

  // Builds a batch definition to check, download and import project translations. 
  // (see function l10n_update_batch_update_build() in l10n_update.fetch.inc file, line 29)
  $langcodes = array($settings['default_language']);
  $options = _l10n_update_default_update_options();
  $translations_batch_definition = l10n_update_batch_update_build(array(), $langcodes, $options);
  // We just need the 'operations' key contained in $translations_batch array
  // Next line currently commented due to bug during translations download/import.
  // $batch['operations'][] = $translations_batch_definition['operations'];
  
  // And we add the l10n_update module disabling operation to the batch for performance reasons.
  $batch['operations'][] = array('module_disable', array(array('l10n_update')));

  return $batch;
}

/**
 * Preset base configuration variables.
 */
function _crealead_install_variables() {
  $settings = _crealead_get_settings();

  variable_set('site_name',  $settings['site_name']);
  variable_set('site_slogan',  $settings['site_slogan']);
  variable_set('site_mail',  $settings['site_mail']);

  variable_set('site_default_country',$settings['default_country']);
  variable_set('date_default_timezone', $settings['default_timezone']);
  variable_set('date_first_day', $settings['first_day']);
  
  variable_set('clean_url', 1);

  variable_set('update_notify_emails', array($settings['site_mail']));
  module_disable(array('update'));
}

/**
 * Force user1 settings.
 */
function _crealead_install_user1() {
  $settings = _crealead_get_settings();
  $user1 = user_load(1);

  $edit = array();
  $edit['name'] = $settings['user1_name'];
  $edit['mail'] = $settings['site_mail'];
  $edit['pass'] = user_password(50); // Use drush to log in as user1.

  user_save($user1, $edit);
}

/**
 * Get settings from the profile's info file.
 *
 * @return array
 *   The settings array.
 */
function _crealead_get_settings() {
  $settings = &drupal_static(__FUNCTION__, NULL);
  if (empty($settings)) {
    $data = drupal_parse_info_file(str_replace('.install', '.info', __FILE__));
    $settings = $data['settings'];
  }
  return $settings;
}

/**
 * Activate feature Multimedia.
 */
function crealead_update_7001() {
	module_enable(array('crealead_multimedia'));
}

/**
 * Activate feature Google Web Stats (provided by Korora install profile).
 */
function crealead_update_7002() {
	module_enable(array('kwstatsgoogle'));
}

/**
 * Activate feature crealead_my_contents.
 */
function crealead_update_7003() {
  module_enable(array('crealead_my_contents'));
}

/**
 * Activate feature crealead_trainings.
 */
function crealead_update_7004() {
  module_enable(array('crealead_trainings'));
}

/**
 * Activate field_formatter_settings and field_formatter_class module.
 */
function crealead_update_7005() {
  module_enable(array('field_formatter_settings','field_formatter_class'));
}

/**
 * Activate feature crealead_gazette.
 */
function crealead_update_7006() {
  module_enable(array('crealead_gazette'));
}

/**
 * Activate feature crealead_documents.
 */
function crealead_update_7007() {
  module_enable(array('crealead_documents'));
}

/**
 * Activate feature crealead_geolocations.
 */
function crealead_update_7008() {
  module_enable(array('crealead_geoolocations'));
}

/**
 * Activate feature crealead_newsflashes.
 */
function crealead_update_7009() {
  module_enable(array('crealead_newsflashes'));
}

/**
 * Activate feature crealead_events.
 */
function crealead_update_7010() {
  module_enable(array('crealead_events'));
}

/**
 * Activate feature crealead_needs.
 */
function crealead_update_7011() {
  module_enable(array('crealead_needs'));
}

/**
 * Activate mimemail contrib module.
 */
function crealead_update_7012() {
  module_enable(array('mimemail'));
}

/**
 * Activate label_help contrib module.
 */
function crealead_update_7013() {
  module_enable(array('label_help'));
}

/**
 * Activate feature crealead_warnings.
 */
function crealead_update_7014() {
  module_enable(array('crealead_warnings'));
}

/**
 * Activate feature crealead_ads.
 */
function crealead_update_7015() {
  module_enable(array('crealead_ads'));
}

/**
 * Activate feature crealead_offers.
 */
function crealead_update_7016() {
  module_enable(array('crealead_offers'));
}

/**
 * Activate feature crealead_calendars.
 */
function crealead_update_7017() {
  module_enable(array('crealead_calendars'));
}

/**
 * Activate feature crealead_repository and disable admin_views_user view (from Administration Views contrib module).
 */
function crealead_update_7018() {
  module_enable(array('crealead_repository'));

  // Disable view admin_views_user.
  // Disabled views are stored in the array variable named views_defaults (key=view_name, value = TRUE).
  $disabled_views_status = variable_get('views_defaults', array());
  $disabled_views_status['admin_views_user'] = TRUE;
  variable_set('views_defaults', $disabled_views_status);
}
/**
 * Activate modules custom_search and custom_search_blocks.
 */
function crealead_update_7019() {
  module_enable(array('custom_search'));
  module_enable(array('custom_search_blocks'));
}

/**
 * Activate module mailjet.
 */
/*function crealead_update_7020() {
  module_enable(array('mailjet'));
}*/

/**
 * Activate feature crealead_groups.
 */
function crealead_update_7021() {
  module_enable(array('crealead_groups'));
}

/**
 * Activate feature crealead_faqs.
 */
function crealead_update_7022() {
  module_enable(array('crealead_faqs'));
}


/**
 * Activate feature crealead_coopins.
 */
function crealead_update_7023() {
  module_enable(array('crealead_coopins'));
}

/**
 * Activate eu_cookie_compliance contrib module.
 */
//function crealead_update_7024() {
//  module_enable(array('eu_cookie_compliance'));
//}

/**
 * ******************   IMPORTANT ! ********************************************
 * Le hook_update 7024 ci-dessus a été désactivé avant déploiement en prod
 * parce que le module eu_cookie_compliance a été testé mais non utilisé au final.
 *
 * Lors de la prochaine implémentation du hook_update_N(),
 * il faudra utiliser le nombre 7025
 * sinon, ça ne sera pas pris en compte par le serveur de recette sur lequel
 * le hook_update_7024() a déjà été appliqué.
 */

/**
 * Activate feature crealead_associates.
 */
function crealead_update_7025() {
  module_enable(array('crealead_associates'));
}

/**
 * Activate feature crealead_associates.
 */
function crealead_update_7026() {
  module_enable(array('roles_per_menu'));
}
